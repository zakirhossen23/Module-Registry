#!/bin/bash



save_log()
{
    msg=$1

    #check if log is enabled or not 
    if [[ ${LOG_LEVEL} != "1" ]]; then 
    
       return 
    fi

    #check if log file exists or not
    if [[ ! -e "${LOG_FILE}" ]]; then
        
        #Create folder if not exists
        DIR="$(dirname "${LOG_FILE}")";
        mkdir -p "$DIR"

        #Create the log file
        touch "${LOG_FILE}"
    fi

    echo $msg >> "${LOG_FILE}";

}


if [[ -f $1 ]]; then 
    if [[ -z "${GITHUB_TOKEN}" ]]; then
        echo 'Please set GITHUB_TOKEN environment variable';
    else
        save_log "./run $1 ----> running software on a text file of urls"; 

         node ./out/index.js -f $1;
    fi
elif [[ $1 == 'install' ]]; then 
    sh ./install-dependencies.sh  > /dev/null 2>&1;

    echo '13 dependencies installed...';
   
    save_log "./run install ----> 13 Dependencies installed: ";
    save_log "                    Project dependencies  ---> @octokit/core, @types/jest, commander, dotenv, figlet, jest, node-fetch, parse-github-url, ts-jest";
    save_log "                    Dev dependencies      ---> @types/node, @types/node-fetch, @types/parse-github-url, typescript";
  

elif [[ $1 == 'build' ]]; then
    save_log "./run build ----> compiling typescript files to javascript";
    npm run build > /dev/null 2>&1;  
    echo 'Successfully built...';
   
elif [[ $1 == 'test' ]]; then
    save_log "./run test  ----> comparing expected output file to output file, based on urls_for_test.txt"
    npm run test > /dev/null 2>&1
    total="$(npm run tests-total -s)"
    passed="$(npm run tests-passed -s)"
    coverage="$(npm run coverage -s)"

    echo  Total: "$total"
    echo  Passed: "$passed"
    echo  Coverage: "$coverage"\%;
    echo $passed / "$total" test cases passed. "$coverage"\% Line coverage achieved;
  
else 
    save_log "ERROR: Unrecognized command in Command Line, see stdout for details"
    echo ""
    echo "Error: Not a supported command, here are a list of commands:"
    echo "-- ./run install: Installs all dependencies to run the software, nodejs modules, and typescript modules"
    echo "-- ./run build: Does any necessary compilation for code (Compiles Typescript code to Javascript)"
    echo "-- ./run (path to url_file.txt): Runs the software for all github and npm repositories to give scores, prints to stdout"
    echo "-- ./run test: runs a list of test urls against given scores based on our metrics and compares how many are correct, and" 
    echo "               how much line coverage is used"

    exit 1;
fi